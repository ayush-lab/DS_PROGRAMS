class Solution {
public:
    
    
    vector<vector<int>>ans;
    vector<int>res;
    set<vector<int>> st;
    
    void solve(vector<int>&candidates,int n,int target){

        if(target<0) return;
        
        if(target==0){
            sort(res.begin(),res.end()); 
            st.insert(res);
            return;
        }
        
        for(int i=n;i>=0;i--){
           
            if(i<n and i>0 and candidates[i]==candidates[i+1]) continue;
            res.push_back(candidates[i]);
            solve(candidates,i-1,target-candidates[i]);
            res.pop_back();
        }
        
        return;
    
    }
    
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        
        int n = candidates.size();
        sort(candidates.begin(),candidates.end(),greater<int>());

        solve(candidates,n-1,target);
        
        for(auto &i:st){
            ans.push_back(i);
        }
        return ans;
        
    }
    
    
    
};
