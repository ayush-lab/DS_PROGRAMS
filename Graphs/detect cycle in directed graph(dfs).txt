
class Solution {
  public:
    // Function to detect cycle in a directed graph.
    
    bool dfs(vector<int> adj[], vector<int> &visited, vector<int> &rec, int cur){
        visited[cur]=1;
        rec[cur]=1;
        
        for(int i=0;i<adj[cur].size();i++){
            if(visited[adj[cur][i]]==0 and dfs(adj,visited,rec,adj[cur][i]) ){
                return true;
            }
            
            else if(rec[adj[cur][i]]) return true;
        }
        
        rec[cur]=0;
        return false;
    }
    
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        
        vector<int> visited(V,0);
        vector<int> rec(V,0);
        
        for(int i=0;i<V;i++){
            if(visited[i]==0){
               if(dfs(adj,visited,rec,i)==true) return true;
            }
        }
        
        return false;
        
    }
};

