// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends


class Solution 
{
    public:
    //Function to find the minimum number of swaps required to sort the array. 
    
    void swapd(vector<pair<int,int> > &arr, int &a, int &b){
        pair<int,int> temp  = arr[a];
        // int ind = a;
        arr[a].first= arr[b].first;
        arr[a].second=arr[b].second;
        arr[b].first = temp.first;
        arr[b].second=temp.second;
    }
    
	int minSwaps(vector<int>&nums)
	{
	    // Code here
	    int size = nums.size();
	    vector<pair<int,int>> arr;
	    
	    for(int i=0;i<size;i++){
	        arr.push_back({nums[i],i});
	    }
	    
	    sort(arr.begin(),arr.end());
	    
	    // 2,0 4,3 5,2 8,1
	    
	    int swaps=0;
	    
	    for(int i=0;i<size;i++){
	        if(arr[i].second ==i) continue;
	        
	        else{
	            swapd(arr, arr[i].second,i);   
	            swaps++;
	            i--;
	        }
	    }
	    
	    return swaps;
	}
};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n;
		cin >> n;
		vector<int>nums(n);
		for(int i = 0; i < n; i++)
			cin >> nums[i];
		Solution obj;
		int ans = obj.minSwaps(nums);
		cout << ans <<"\n";
	}
	return 0;
}  // } Driver Code Ends