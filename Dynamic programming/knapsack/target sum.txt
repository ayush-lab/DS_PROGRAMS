

class Solution {
  public:
    int findTargetSumWays(vector<int>&arr ,int target) {
        //Your code here
        int range=0;
        int n = arr.size();
        
        for(int i=0;i<n;i++) {
            range+=arr[i];
            
        }
        
        int sum = (range + target);
        
        if(sum%2!=0) return 0;
        
        sum/=2;
        
        vector<vector<int>> dp(n+1,vector<int>(sum+1,-1));
        
        for(int i=0;i<=n;i++){
            dp[i][0]=1;
        }
        for(int i=1;i<=sum;i++){
            dp[0][i]=0;
        }
        
        for(int i=1;i<=n;i++){
            for(int j=0;j<=sum;j++){
                if(arr[i-1]<=j){
                    dp[i][j]=dp[i-1][j-arr[i-1]] + dp[i-1][j];
                }
                else dp[i][j]=dp[i-1][j];
            }
        }
        
        return dp[n][sum];
        
    }
};