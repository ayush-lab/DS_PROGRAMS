 public:
    //Function to find minimum number of attempts needed in 
    //order to find the critical floor.
    
    int solve(int n,int k, vector<vector<int>>&dp){
        
        if(k==0 or k==1){
            return k;
        }
        
        if(n==1) return k;
        
        if(dp[n][k]!=-1) return dp[n][k];
        
        int mn=INT_MAX;
        
        for(int f=1;f<=k;f++){
            int temp = 1+ max(solve(n-1,f-1,dp),solve(n,k-f,dp));
            mn=min(mn,temp);
            
        }
        
        return dp[n][k]=mn;
        
    }
    
    int eggDrop(int n, int k) 
    {
        // your code here
        vector<vector<int>> dp(n+1,vector<int>(k+1,-1));
        return solve(n,k,dp);
        
    }